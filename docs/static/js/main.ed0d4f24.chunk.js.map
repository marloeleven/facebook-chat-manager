{"version":3,"sources":["types/lang.ts","containers/errorboundary.tsx","contexts/base.ts","contexts/lang.ts","contexts/login.ts","containers/loader.tsx","containers/pagelist.tsx","const/config.ts","components/FBLogin.tsx","hooks/useEffectOnce.ts","api/fb.ts","App.tsx","index.tsx"],"names":["ILangEnum","ErrorBoundary","state","hasError","error","errorInfo","this","props","children","console","log","Component","Base","callback","setState","produce","draft","Container","lang","en","data","save","key","defaultValue","hasOwnProperty","loggedIn","accessToken","userId","Object","assign","className","CircularProgress","Typography","variant","color","Page","id","name","onClick","pages","setSelectedPage","map","page","fb","appId","version","messenger","page_id","BASE_URL","_window","window","login","checkLoginStatus","useCallback","authResponse","status","setData","onClickLogin","FB","init","CONFIG","autoLogAppEvents","xfbml","getLoginStatus","useEffect","Button","generateURL","paramsObj","baseURL","join","params","URLSearchParams","toString","access_token","Promise","resolve","reject","fetch","then","r","json","catch","useStyles","makeStyles","theme","root","display","App","classes","useState","setPages","a","fbApi","fallback","length","FBLogin","ReactDOM","render","StrictMode","inject","Lang","Login","to","document","getElementById"],"mappings":"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","file":"static/js/main.ed0d4f24.chunk.js","sourcesContent":["export enum ILangEnum {\r\n  en = 'en',\r\n  ph = 'ph',\r\n}\r\n","import React, { Component } from 'react';\r\n\r\ninterface IState {\r\n  hasError: boolean;\r\n}\r\n\r\nclass ErrorBoundary extends Component {\r\n  state: IState = {\r\n    hasError: false,\r\n  };\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    console.log(error);\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error: any, errorInfo: any) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    // console.error(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { Container } from 'unstated';\r\nimport produce from 'immer';\r\n\r\ninterface IBase {\r\n  save: (callback: Function) => Promise<any>;\r\n}\r\n\r\nexport default class Base extends Container<{}> implements IBase {\r\n  save(callback: Function) {\r\n    return this.setState(\r\n      produce((draft) => {\r\n        callback(draft);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import Base from './base';\r\nimport { ILangEnum } from 'types/lang';\r\nimport en from 'lang/en.json';\r\n\r\ninterface LangObject {\r\n  [key: string]: string;\r\n}\r\n\r\ninterface IState {\r\n  lang: ILangEnum;\r\n  data: LangObject;\r\n}\r\n\r\ninterface ILang {\r\n  state: IState;\r\n  setLang: (lang: ILangEnum) => void;\r\n  getText: (key: string, defaultValue: string) => string;\r\n}\r\n\r\nclass Lang extends Base implements ILang {\r\n  state: IState = {\r\n    lang: ILangEnum.en,\r\n    data: en,\r\n  };\r\n\r\n  setLang(lang: ILangEnum) {\r\n    this.save((draft: IState) => (draft.lang = lang));\r\n  }\r\n\r\n  getText(key: string, defaultValue: string = '') {\r\n    return this.state.data.hasOwnProperty(key)\r\n      ? this.state.data[key]\r\n      : defaultValue;\r\n  }\r\n}\r\n\r\nexport { Lang };\r\nexport default new Lang();\r\n","import Base from './base';\r\n\r\nexport interface IState {\r\n  loggedIn: boolean;\r\n  accessToken: string;\r\n  userId: string;\r\n}\r\n\r\nexport interface ILogin {\r\n  state: IState;\r\n  setData: (data: IState) => void;\r\n}\r\n\r\nclass Login extends Base implements ILogin {\r\n  state: IState = {\r\n    loggedIn: false,\r\n    accessToken: '',\r\n    userId: '',\r\n  };\r\n\r\n  setData(data: IState) {\r\n    this.save((draft: IState) => {\r\n      Object.assign(draft, data);\r\n    });\r\n  }\r\n}\r\n\r\nexport default new Login();\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default () => (\r\n  <div className=\"absolute top-0 h-full w-full flex justify-center items-center bg-black bg-opacity-50 flex-col\">\r\n    <CircularProgress />\r\n    <Typography variant=\"button\" color=\"inherit\" className=\"pt-4\">\r\n      Loading...\r\n    </Typography>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nexport interface IPage {\r\n  name: string;\r\n  id: string;\r\n  access_token: string;\r\n}\r\n\r\ninterface IPageListProps {\r\n  pages: IPage[];\r\n  setSelectedPage: Function;\r\n}\r\n\r\ninterface IPageProps {\r\n  id: string;\r\n  name: string;\r\n  onClick: Function;\r\n}\r\n\r\nconst Page: React.FC<IPageProps> = ({ id, name, onClick }) => (\r\n  <span onClick={() => onClick(id)}>{name}</span>\r\n);\r\n\r\nexport default ({ pages, setSelectedPage }: IPageListProps) => {\r\n  return (\r\n    <ul>\r\n      {pages.map((page) => (\r\n        <Page {...page} onClick={setSelectedPage} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","export default {\r\n  fb: {\r\n    appId: '563571747166109',\r\n    version: 'v7.0',\r\n    messenger: {\r\n      page_id: '402815903188264',\r\n      color: '#e68585',\r\n    },\r\n    BASE_URL: 'https://graph.facebook.com',\r\n  },\r\n};\r\n","import React, { useCallback } from 'react';\r\n\r\nimport useEffectOnce from 'hooks/useEffectOnce';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CONFIG from 'const/config';\r\n\r\nimport { ILogin } from 'contexts/login';\r\n\r\ninterface IFBData {\r\n  accessToken: string;\r\n  userId: string;\r\n}\r\n\r\ninterface IFBloginResult {\r\n  authResponse: IFBData;\r\n  status: string;\r\n}\r\n\r\ninterface IProps {\r\n  loginStatus: boolean;\r\n  onClickLogin: Function;\r\n  [key: string]: any;\r\n}\r\n\r\nconst _window = window as any;\r\n\r\nexport default ({ login }: { login: ILogin }) => {\r\n  const checkLoginStatus = useCallback(\r\n    ({ authResponse, status }: IFBloginResult) => {\r\n      if (status === 'connected') {\r\n        const { accessToken, userId } = authResponse;\r\n\r\n        login.setData({ accessToken, userId, loggedIn: true });\r\n      }\r\n    },\r\n    [login]\r\n  );\r\n\r\n  const onClickLogin = useCallback(() => {\r\n    _window.FB.login(checkLoginStatus);\r\n  }, [checkLoginStatus]);\r\n\r\n  useEffectOnce(() => {\r\n    _window.FB.init({\r\n      appId: CONFIG.fb.appId,\r\n      autoLogAppEvents: true,\r\n      xfbml: true,\r\n      version: CONFIG.fb.version,\r\n    });\r\n\r\n    _window.FB.getLoginStatus(checkLoginStatus);\r\n  });\r\n\r\n  return (\r\n    <Button variant='contained' color='primary' onClick={onClickLogin}>\r\n      Login to Facebook\r\n    </Button>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\n\r\nexport default (callback: React.EffectCallback) => useEffect(callback, []);\r\n","import CONFIG from 'const/config';\r\n\r\ninterface IURLParams {\r\n  [key: string]: any;\r\n}\r\n\r\ninterface IApiResult {\r\n  data: any[];\r\n}\r\n\r\nconst generateURL = (paramsObj: IURLParams) => {\r\n  const baseURL = [CONFIG.fb.BASE_URL, CONFIG.fb.version].join('/');\r\n\r\n  const params = new URLSearchParams(paramsObj).toString();\r\n\r\n  return { baseURL, params };\r\n};\r\n\r\nexport const getLiveVideos = (\r\n  id: string | number,\r\n  access_token: string\r\n): Promise<IApiResult> => {\r\n  const { baseURL, params } = generateURL({ access_token });\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const result = fetch(`${baseURL}/${id}/live_videos?status=LIVE&${params}`)\r\n      .then((r) => r.json())\r\n      .catch(reject);\r\n\r\n    resolve(result);\r\n  });\r\n};\r\n\r\nexport const getPages = (access_token: string): Promise<IApiResult> => {\r\n  const { baseURL, params } = generateURL({ access_token });\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const result = fetch(`${baseURL}/me/accounts?fields=id,name&${params}`)\r\n      .then((r) => r.json())\r\n      .catch(reject);\r\n\r\n    resolve(result);\r\n  });\r\n};\r\n\r\nexport default {\r\n  getPages,\r\n  getLiveVideos,\r\n};\r\n","import React, { Suspense, useEffect, useState } from 'react';\n\nimport Loader from 'containers/loader';\nimport PageList, { IPage } from 'containers/pagelist';\nimport FBLoginButton from 'components/FBLogin';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ILogin } from 'contexts/login';\n\nimport fbApi from 'api/fb';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n}));\n\ninterface IAppProps {\n  login: ILogin;\n}\n\nconst App: React.FC<IAppProps> = ({ login }) => {\n  const classes = useStyles();\n  const [pages, setPages] = useState<IPage[]>([]);\n  const [selectedPage, setSelectedPage] = useState<string>('');\n\n  useEffect(() => {\n    (async () => {\n      if (login.state.loggedIn) {\n        const { data: pages } = await fbApi.getPages(login.state.accessToken);\n\n        setPages(pages);\n      }\n    })();\n  }, [login.state, setPages]);\n\n  return (\n    <div className={classes.root}>\n      <Suspense fallback={<Loader />}></Suspense>\n      {pages.length && (\n        <PageList pages={pages} setSelectedPage={setSelectedPage} />\n      )}\n      {login.state.loggedIn && <FBLoginButton login={login} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, Subscribe } from 'unstated';\n\nimport './index.css';\n\nimport ErrorBoundary from './containers/errorboundary';\n\nimport Lang from 'contexts/lang';\nimport Login, { ILogin } from 'contexts/login';\n\nimport App from './App';\n\n// Login\n// Filter\n// Cart\n// Pagination\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <Provider inject={[Lang, Login]}>\n        <Subscribe to={[Login]}>\n          {(login) => {\n            // @ts-ignore\n            return <App login={login} />;\n          }}\n        </Subscribe>\n      </Provider>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}